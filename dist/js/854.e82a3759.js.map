{"version":3,"file":"js/854.e82a3759.js","mappings":"mHAAaA,EAAA,MACbC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,eAAY,EACpB,MAAMC,EAAWN,EAAQ,MACnBO,EAAc,UACdC,EAAiB,gCACvB,IAAIC,GACJ,SAAWA,GACPA,EAAKA,EAAK,OAAS,GAAK,MACxBA,EAAKA,EAAK,OAAS,GAAK,KAC3B,EAHD,CAGGA,IAASA,EAAO,CAAC,IACpB,MAAMJ,EACFK,YAAYC,EAAMC,EAAQC,GACtBC,KAAKF,OAASA,EACdE,KAAKC,GAAK,IAAIC,kBAAkBH,GAChCC,KAAKG,WAAa,GACdN,IAASF,EAAKS,KACdJ,KAAKC,GAAGI,kBAAkBZ,GAE9BO,KAAKC,GAAGK,eAAiB,EAAGC,gBACpBA,GACAP,KAAKF,OAAOU,QAAQ,CAAEC,OAAQZ,EAAMU,aACxC,EAEJP,KAAKC,GAAGS,2BAA6BC,UACE,iBAA/BX,KAAKC,GAAGW,yBACmBC,IAAvBb,KAAKC,GAAGa,YAERd,KAAKC,GAAGa,YAEhB,CAER,EAEJzB,EAAQE,UAAYA,EACpB,MAAMwB,EACFnB,YAAYE,EAAQC,EAAS,CACzBiB,MAAO,MACPC,WAAY,CACR,CACIC,KAAM,CAAC,+BAAgC,qCAI/ClB,KAAKF,OAASA,EACdE,KAAKD,OAASA,EACdD,EAAOqB,YAAcnB,KAAKoB,UAAUC,KAAKrB,MACzCF,EAAOwB,UAAYtB,KAAKQ,QAAQa,KAAKrB,KACzC,CACAW,WAAWY,EAAKC,GACZxB,KAAKyB,WAAa,CACd,CAAC9B,EAAKS,KAAM,IAAIb,EAAUI,EAAKS,IAAKJ,KAAKF,OAAQE,KAAKD,QACtD,CAACJ,EAAK+B,KAAM,IAAInC,EAAUI,EAAK+B,IAAK1B,KAAKF,OAAQE,KAAKD,SAE1DC,KAAKyB,WAAW9B,EAAK+B,KAAKzB,GAAG0B,QAAWC,IACpC,MAAMC,EAASD,EAAGE,QAAQ,GACpBC,EAASvC,EAASwC,WAAWH,EAAQ7B,KAAKyB,WAAW9B,EAAK+B,MAC5D1B,KAAK2B,SACL3B,KAAK2B,QAAQC,EAAGK,MAAOF,EAC3B,EAEJ,MAAMG,EAAW,IAAIC,SAASC,IAC1BpC,KAAKyB,WAAW9B,EAAK+B,KAAKzB,GAAGoC,cAAiBT,IAC1C,GAAIA,EAAGU,QAAQC,QAAU9C,EAcrB,OAbAO,KAAKyB,WAAW9B,EAAK+B,KAAKc,IAAMZ,EAAGU,QACnCtC,KAAKyB,WAAW9B,EAAKS,KAAKoC,IAAMZ,EAAGU,QACnCV,EAAGU,QAAQG,UAAaC,IACpB,IACI,MAAMC,EAAMC,KAAKC,MAAMH,EAAEI,MACzB9C,KAAK+C,sBAAsBJ,EAC/B,CACA,MAAOK,GAEHC,QAAQC,MAAMF,EAClB,QAEJZ,IAGApC,KAAKqC,eACLrC,KAAKqC,cAAcT,EACvB,CACH,IAECuB,QAAcnD,KAAKyB,WAAW9B,EAAKS,KAAKH,GAAGmD,oBAC3CpD,KAAKyB,WAAW9B,EAAKS,KAAKH,GAAGoD,oBAAoBF,GACvD,MAAMG,QAAetD,KAAKF,OAAOyD,KAAKhC,EAAKC,EAAK2B,GAIhD,aAHMnD,KAAKyB,WAAW9B,EAAKS,KAAKH,GAAGuD,qBAAqBF,GACxDtD,KAAKyB,WAAW9B,EAAKS,KAAKD,WAAWsD,SAASC,GAAM1D,KAAKyB,WAAW9B,EAAKS,KAAKH,GAAG0D,gBAAgBD,KACjG1D,KAAKyB,WAAW9B,EAAKS,KAAKH,GAAG2D,oBAAsB5D,KAAK6D,oBAAoBxC,KAAKrB,MAC1EkC,CACX,CACA4B,QACQ9D,KAAKyB,aACLtC,OAAO4E,OAAO/D,KAAKyB,YAAYgC,SAASO,GAAMA,EAAE/D,GAAGgE,iBAC5CjE,KAAKyB,WAEpB,CACAyC,YAAYC,GACR,IAAKnE,KAAKyB,WACN,MAAM2C,MAAM1E,GAEhB,OAAOM,KAAKyB,WAAW9B,EAAKS,KAAKH,GAAGoE,SAASF,EACjD,CACAG,YAAYH,GACR,IAAKnE,KAAKyB,WACN,MAAM2C,MAAM1E,GAEhB,OAAOM,KAAKyB,WAAW9B,EAAK+B,KAAKzB,GAAGoE,SAASF,EACjD,CACAI,QAAQ1C,EAAQ2C,GACZ,IAAKxE,KAAKyB,WACN,MAAM2C,MAAM1E,GAEhBmC,EAAO0C,QAAQvE,KAAKyB,WAAW9B,EAAKS,KAAMoE,EAC9C,CACA1D,aACId,KAAKyE,aAAY,EACrB,CACApE,kBAAkBkC,GACd,IAAKvC,KAAKyB,WACN,MAAM2C,MAAM1E,GAEhB,OAAOM,KAAKyB,WAAW9B,EAAKS,KAAKH,GAAGI,kBAAkBkC,EAC1D,CACA0B,QACQjE,KAAKyB,YACLtC,OAAO4E,OAAO/D,KAAKyB,YAAYgC,SAASO,GAAMA,EAAE/D,GAAGgE,UAEvDjE,KAAKF,OAAOmE,OAChB,CACAzD,SAAQ,UAAED,EAAS,OAAEE,IACjB,IAAKT,KAAKyB,WACN,MAAM2C,MAAM1E,GAEZM,KAAKyB,WAAWhB,GAAQR,GAAGyE,kBAC3B1E,KAAKyB,WAAWhB,GAAQR,GAAG0D,gBAAgBpD,GAG3CP,KAAKyB,WAAWhB,GAAQN,WAAWwE,KAAKpE,EAEhD,CACAI,gBAAgBiE,GACZ,IAAK5E,KAAKyB,WACN,MAAM2C,MAAM1E,GAEhB,IAAI4D,EACJ,UACUtD,KAAKyB,WAAW9B,EAAK+B,KAAKzB,GAAGuD,qBAAqBoB,GACxD5E,KAAKyB,WAAW9B,EAAK+B,KAAKvB,WAAWsD,SAASC,GAAM1D,KAAKyB,WAAW9B,EAAK+B,KAAKzB,GAAG0D,gBAAgBD,KACjG1D,KAAKyB,WAAW9B,EAAK+B,KAAKvB,WAAa,GACvCmD,QAAetD,KAAKyB,WAAW9B,EAAK+B,KAAKzB,GAAG4E,qBACtC7E,KAAKyB,WAAW9B,EAAK+B,KAAKzB,GAAGoD,oBAAoBC,GACvDtD,KAAKF,OAAOwD,OAAOA,EACvB,CACA,MAAON,GAEHC,QAAQC,MAAMF,GACVhD,KAAK8E,gBACL9E,KAAK8E,eAAenF,EAAK+B,IAAKsB,EAAK4B,EAAatB,EACxD,CACJ,CACAO,sBACI7D,KAAKyE,aAAY,EACrB,CACA9D,kBAAkBoE,GACd,IAAK/E,KAAKyB,WACN,MAAM2C,MAAM1E,GAEhB,IAAIyD,EACAG,EACJ,IACIH,QAAcnD,KAAKyB,WAAW9B,EAAKS,KAAKH,GAAGmD,YAAY,CAAE2B,qBACnD/E,KAAKyB,WAAW9B,EAAKS,KAAKH,GAAGoD,oBAAoBF,GACvDG,QAAetD,KAAKF,OAAOqD,MAAMA,SAC3BnD,KAAKyB,WAAW9B,EAAKS,KAAKH,GAAGuD,qBAAqBF,EAC5D,CACA,MAAON,GAEHC,QAAQC,MAAMF,GACVhD,KAAK8E,gBACL9E,KAAK8E,eAAenF,EAAKS,IAAK4C,EAAKG,EAAOG,EAClD,CACJ,CACAP,sBAAsBJ,GAClB,QAAmB9B,IAAf8B,EAAIqC,aAAuCnE,IAAf8B,EAAIsC,OAChC,OAAQtC,EAAIqC,QACR,IAAK,cACGhF,KAAKkF,WACLlF,KAAKkF,UAAUvC,EAAIsC,QAEvB,MACJ,IAAK,cACGjF,KAAKmF,eACLnF,KAAKmF,cAAcxC,EAAIsC,QAE3B,MACJ,cAMAjF,KAAKkF,WACLlF,KAAKkF,UAAUvC,EAG3B,EAEJtD,EAAAA,WAAkB0B,C,uBC/MlB1B,EAAQ,GAAcA,EAAQ,QAAS,EACvC,MAAM+F,EAAWlG,EAAQ,MACzBG,EAAQ,GAAS+F,EAASC,QAC1B,MAAM7F,EAAWN,EAAQ,MACzBC,OAAOC,eAAeC,EAAS,KAA/BF,CAAgDmG,YAAY,EAAMC,IAAK,WAAc,OAAO/F,EAASgG,WAAa,G,uBCNrGtG,EAAA,MACbC,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQ2C,WAAa3C,EAAQmG,YAAcnG,EAAQoG,sBAAmB,EACtE,MAAMC,EAAc,CAAC,OAAQ,MAAO,MAAO,KAAM,MAAO,OACxDrG,EAAQoG,iBAAmB,CACvBE,KAAM,CACFC,WAAY,CACRC,MAAO,CAAEC,MAAO,KAChBC,OAAQ,CAAED,MAAO,KACjBE,UAAW,CACPF,MAAO,GACPG,IAAK,KAGbC,UAAW,CACPC,WAAY,KACZC,aAAc,KAGtBC,IAAK,CACDT,WAAY,CACRC,MAAO,CAAEC,MAAO,KAChBC,OAAQ,CAAED,MAAO,KACjBE,UAAW,CACPF,MAAO,GACPG,IAAK,KAGbC,UAAW,CACPC,WAAY,IACZC,aAAc,KAGtBE,IAAK,CACDV,WAAY,CACRC,MAAO,CAAEC,MAAO,KAChBC,OAAQ,CAAED,MAAO,KACjBE,UAAW,CACPF,MAAO,GACPG,IAAK,KAGbC,UAAW,CACPC,WAAY,KACZC,aAAc,KAGtBG,GAAI,CACAX,WAAY,CACRC,MAAO,CAAEC,MAAO,MAChBC,OAAQ,CAAED,MAAO,KACjBE,UAAW,CACPF,MAAO,GACPG,IAAK,KAGbC,UAAW,CACPC,WAAY,KACZC,aAAc,KAGtBI,IAAK,CACDZ,WAAY,CACRC,MAAO,CAAEC,MAAO,MAChBC,OAAQ,CAAED,MAAO,MACjBE,UAAW,CACPF,MAAO,GACPG,IAAK,KAGbC,UAAW,CACPC,WAAY,IACZC,aAAc,KAGtBK,IAAK,CACDb,WAAY,CACRC,MAAO,CAAEC,MAAO,MAChBC,OAAQ,CAAED,MAAO,MACjBE,UAAW,CACPF,MAAO,GACPG,IAAK,KAGbC,UAAW,CACPC,WAAY,IACZC,aAAc,MAI1B,MAAMM,EAAW,CACbd,WAAY,KACZ5E,MAAO,MACP2F,OAAO,EACPC,OAAO,EACPC,WAAW,GAEf,MAAMrB,UAAoBsB,YACtBlH,YAAYiC,EAAQkF,GAChBC,MAAMnF,GACN7B,KAAK+G,YAAcA,CACvB,CACAE,0BAA0BF,EAAcL,GACpC,MAAM7E,QAAeqF,UAAUC,aAAaC,aAAa,CACrDT,MAAOnB,EAAY6B,wBAAwB,IACpCX,KACAK,IAEPH,MAAOpB,EAAY8B,wBAAwB,IACpCZ,KACAK,MAGX,OAAO,IAAIvB,EAAY3D,EAAQ,IACxB6E,KACAK,GAEX,CACAE,6BAA6BF,EAAc,CACvC/F,MAAO,MACP4E,WAAY,KACZe,OAAO,EACPC,OAAO,EACPC,WAAW,IAGX,MAAMhF,QAAeqF,UAAUC,aAAaI,gBAAgBR,GAC5D,OAAO,IAAIvB,EAAY3D,EAAQ,IACxB6E,KACAK,GAEX,CACAE,+BAA+BF,GAC3B,OAAOA,EAAYJ,KACvB,CACAM,+BAA+BF,GAC3B,OAAIA,EAAYH,iBAAiBzH,OACtB4H,EAAYH,MAEdG,EAAYH,OAASG,EAAYnB,WAC/B,IACAvG,EAAQoG,iBAAiBsB,EAAYnB,YAAYA,YAGrDmB,EAAYH,KACvB,CACAY,SAASC,GACL,IAAIC,EACJ,MAAa,UAATD,GACAC,EAAS1H,KAAK2H,iBACPD,EAAOE,OAAS,EAAI5H,KAAK2H,iBAAiB,QAAK9G,IAE1D6G,EAAS1H,KAAK6H,iBACPH,EAAOE,OAAS,EAAI5H,KAAK6H,iBAAiB,QAAKhH,EAC1D,CACAF,kBAAkB8G,GACd,MAAM5F,QAAeqF,UAAUC,aAAaC,aAAa,CACrD,CAACK,GAAgB,UAATA,EACFjC,EAAY8B,wBAAwBtH,KAAK+G,aACzCvB,EAAY6B,wBAAwBrH,KAAK+G,eAEnD,OAAOlF,EAAOiG,YAAY,EAC9B,CACAC,aAAa9F,GACT,GAAIjC,KAAKC,GAAI,CACT,MAAM+H,EAAO,CACTlG,QAAS,CAAC9B,MACViI,UAAW,YAEf,GAAmB,UAAfhG,EAAMwF,KACN,GAAIzH,KAAKwE,eACLwD,EAAKE,cAAgBlI,KAAKwE,oBAEzB,GAAIxE,KAAK+G,YAAYF,UAAW,CACjC,MAAMsB,EAAMzC,EAAY0C,QAAQpI,KAAK+G,YAAYnB,YAC3CM,EAAY,CACd,CACImC,IAAK,IACLlC,WAAY9G,EAAQoG,iBAAiBC,EAAYyC,IAAMjC,UAAUC,WACjEC,aAAc/G,EAAQoG,iBAAiBC,EAAYyC,IAAMjC,UAAUE,eAGvE+B,EAAM,GAAK,GACXjC,EAAUvB,KAAK,CACX0D,IAAK,IACLC,sBAAuB,EACvBnC,WAAY9G,EAAQoG,iBAAiBC,EAAYyC,EAAM,IAAIjC,UAAUC,WACrEC,aAAc/G,EAAQoG,iBAAiBC,EAAYyC,EAAM,IAAIjC,UAAUE,eAG3E+B,EAAM,GAAK,GACXjC,EAAUvB,KAAK,CACX0D,IAAK,IACLC,sBAAuB,EACvBnC,WAAY9G,EAAQoG,iBAAiBC,EAAYyC,EAAM,IAAIjC,UAAUC,WACrEC,aAAc/G,EAAQoG,iBAAiBC,EAAYyC,EAAM,IAAIjC,UAAUE,eAG/E4B,EAAKE,cAAgBhC,CACzB,MAEI8B,EAAKE,cAAgB,CAAC7I,EAAQoG,iBAAiBzF,KAAK+G,YAAYnB,YAAYM,WAGpF,MAAMqC,EAAcvI,KAAKC,GAAGuI,eAAevG,EAAO+F,GAClDhI,KAAKyI,kBAAkBF,EAAatG,EAAMwF,KAC9C,CACJ,CACAgB,kBAAkBF,EAAad,GAC3B,GAAI,wBAAyBc,EAAa,CACtC,MAAMG,EAAMC,aAAaC,gBAAgBnB,GACzC,IAAKiB,EACD,OACJ,IAAIG,EACJ,GAAI7I,KAAK+G,YAAY+B,uBAAkC,UAATrB,EAAkB,CAC5D,MAAMsB,EAAmBL,EAAIM,OAAOC,QAAQvF,GAAMA,EAAEwF,SAASC,gBAAmB,SAAQnJ,KAAK+G,YAAY/F,MAAMmI,kBAC/G,IAAKJ,EACD,OAEJF,EAAWE,EAAiBK,MAAM1F,IAAQ,IAAI2F,EAAI,OAAO3F,EAAE4F,cAAyC,QAAxBD,EAAK3F,EAAE4F,mBAAgC,IAAPD,OAAgB,EAASA,EAAGjB,QAAS,oBAAmBpI,KAAK+G,YAAY+B,2BAA6B,CAAC,IAC9MD,IAEDA,EAAWE,EAAiB,GAEpC,MAEIF,EAAWH,EAAIM,OAAOI,MAAM1F,GAAMA,EAAEwF,SAASC,gBAAmB,SAAQnJ,KAAK+G,YAAY/F,MAAMmI,iBAC7D,eAA9BzF,EAAEwF,SAASC,gBAEfN,GACAN,EAAYgB,oBAAoB,CAACV,GAEzC,CACJ,CACAW,YAAYC,EAAMC,GACd1J,KAAK2J,SAASF,GAEVC,GACA1J,KAAK4J,YAAYF,GACjBA,EAAKG,OACD7J,KAAKC,IACLD,KAAKC,GAAG6J,aAAarG,SAAQ9C,UACzB,IAAI0I,EAAIU,GACqE,QAAvEV,EAAgB,OAAXW,QAA8B,IAAXA,OAAoB,EAASA,EAAO/H,aAA0B,IAAPoH,OAAgB,EAASA,EAAG5B,QAAUgC,EAAKhC,OACpG,QAAvBsC,EAAKC,EAAO/H,aAA0B,IAAP8H,GAAyBA,EAAGF,OAC5DG,EAAOC,aAAaR,GACxB,KAKJzJ,KAAKC,IACLD,KAAK+H,aAAa0B,EAG9B,CACAS,sBAEI,MAAMC,EAAeC,OAAOD,cAAgBC,OAAOC,mBAC7CC,EAAM,IAAIH,EACVI,EAAaD,EAAIE,mBACvBD,EAAWE,UAAUC,eAAe,IAAOJ,EAAIK,aAC/C,MAAMC,EAAML,EAAWM,QAAQP,EAAIQ,gCAEnC,OADAP,EAAWQ,QACJH,EAAI/I,OAAOgG,iBAAiB,EACvC,CACAmD,oBAAoBnF,EAAOE,GACvB,IAAIsD,EACJ,MAAM4B,EAAS9L,OAAO+L,OAAOC,SAASC,cAAc,UAAW,CAAEvF,QAAOE,WACrC,QAAlCsD,EAAK4B,EAAOI,WAAW,aAA0B,IAAPhC,GAAyBA,EAAGiC,SAAS,EAAG,EAAGzF,EAAOE,GAC7F,MAAMlE,EAASoJ,EAAOM,gBACtB,OAAO1J,EAAO8F,iBAAiB,EACnC,CACApD,QAAQiH,EAAWhH,GACfxE,KAAKC,GAAKuL,EAAUvL,GACpBD,KAAKwC,IAAMgJ,EAAUhJ,IACrBxC,KAAKwE,eAAiBA,EACtBxE,KAAK8H,YAAYrE,QAAQzD,KAAK+H,aAAa1G,KAAKrB,MACpD,CACAyL,YACI,GAAIzL,KAAKC,GAAI,CACT,MAAMyH,EAAS1H,KAAK8H,YACpB9H,KAAKC,GAAG6J,aAAarG,SAASiI,IACtBA,EAAEzJ,OAASyF,EAAOiE,SAASD,EAAEzJ,QAC7BjC,KAAKC,GAAG2J,YAAY8B,EACxB,GAER,CACJ,CACA/K,mBAAmB8G,EAAMmE,GACrB5L,KAAK+G,YAAc,IACZ/G,KAAK+G,YACR,CAACU,GAAOzH,KAAK+G,YAAYU,aAAiBtI,OACpC,IACKa,KAAK+G,YAAYU,GACpBmE,YAEF,CAAEA,aAEZ,MAAMlC,EAAO1J,KAAKwH,SAASC,GAEvBiC,GACAA,EAAKG,OACT,MAAMJ,QAAazJ,KAAK6L,YAAYpE,GACpCzH,KAAKwJ,YAAYC,EAAMC,EAC3B,CACAoC,KAAKrE,GACD,MAAMxF,EAAQjC,KAAKwH,SAASC,GAC5B,GAAIxF,GAASjC,KAAK+G,YAAYgF,gBAAiB,CAC3C,MAAMC,EAAsB,UAATvE,EACbzH,KAAKkK,sBACLlK,KAAKgL,qBAA+B,OAAV/I,QAA4B,IAAVA,OAAmB,EAASA,EAAMgK,cAAcpG,QAAU,KAAgB,OAAV5D,QAA4B,IAAVA,OAAmB,EAASA,EAAMgK,cAAclG,SAAW,KAG/L,OAFAiG,EAAWE,SAAU,OACrBlM,KAAKwJ,YAAYwC,EAAY/J,EAEjC,CACIA,GACAA,EAAM4H,MAEd,CACAlJ,aAAa8G,GACT,MAAMiC,EAAO1J,KAAKwH,SAASC,GACrBxF,QAAcjC,KAAK6L,YAAYpE,GACrCzH,KAAKwJ,YAAYvH,EAAOyH,EAC5B,CACA/I,mBAAmBwL,GACf,MAAMC,EAAO,CACTC,SAAUrM,KAAKsM,GACfH,UAEYvJ,KAAK2J,UAAUH,GAC3BpM,KAAKwC,MACuB,SAAxBxC,KAAKwC,IAAIgK,WAETxM,KAAKwC,IAAIiK,OAAS,KAAQ,IAAIpD,EAAI,OAA2B,QAAnBA,EAAKrJ,KAAKwC,WAAwB,IAAP6G,OAAgB,EAASA,EAAGqD,KAAK9J,KAAK2J,UAAUH,GAAM,EAG3HpM,KAAKwC,IAAIkK,KAAK9J,KAAK2J,UAAUH,KAGrC,MAAMO,EAAc,CAAC,OAAQ,SAAU,aACjCxK,QAAQyK,IAAID,EAAYE,KAAIlM,gBACxBX,KAAK8M,0BAA0B,CAAEC,OAAQZ,EAAOR,SAASqB,IAAUA,EAAM,IAEvF,CACArM,gCAAgC6D,EAAgBwI,GAC5C,IAAI3D,EACJ,IAAKrJ,KAAKC,GACN,OACJ,MAAMyH,EAAS1H,KAAK8H,kBACd3F,QAAQyK,IAAuB,QAAlBvD,EAAKrJ,KAAKC,UAAuB,IAAPoJ,OAAgB,EAASA,EAAGS,aAAab,QAAQe,GAAWA,EAAO/H,OAASyF,EAAOiE,SAAS3B,EAAO/H,SAAQ4K,KAAIlM,UACxJ,MAAMsE,EAAS+E,EAAOiD,gBACjBhI,EAAOiB,YACRjB,EAAOiB,UAAY,CAAC,CAAC,IAEzB,IAAIiC,EAAM,EACV,GAAInI,KAAK+G,YAAYF,WAAamG,EAAO,CACrC,MAAM3E,EAAgB,SAAV2E,EAAmB,IAAgB,WAAVA,EAAqB,IAAM,IAEhE,GADA7E,EAAMlD,EAAOiB,UAAUgH,WAAWC,GAAaA,EAAS9E,MAAQA,IAC5DpD,EAAOiB,UAAU0B,OAASO,EAAM,EAChC,MACR,CACAlD,EAAOiB,UAAUiC,GAAO,IACjBlD,EAAOiB,UAAUiC,MACjB3D,SAEDwF,EAAOoD,cAAcnI,EAAO,IAE1C,EAGJ,SAASjD,EAAWH,EAAQ2J,GACxB,MAAMzJ,EAASF,EACfE,EAAO4E,OAAQ,EACf5E,EAAO6E,MAAQ,OACf7E,EAAOsL,UAAY,OACnBtL,EAAOuL,cAAgB,OACvB,MAAMC,EAASA,KACX,MAAMnB,EAAO,CACTC,SAAUtK,EAAOuK,GACjB1F,MAAO7E,EAAO6E,MACdD,MAAO5E,EAAO4E,MACd0G,UAAWtL,EAAOsL,WAElB7B,EAAUhJ,MACuB,SAA7BgJ,EAAUhJ,IAAIgK,WAEdhB,EAAUhJ,IAAIiK,OAAS,KAAQ,IAAIpD,EAAI,OAAgC,QAAxBA,EAAKmC,EAAUhJ,WAAwB,IAAP6G,OAAgB,EAASA,EAAGqD,KAAK9J,KAAK2J,UAAUH,GAAM,EAGrIZ,EAAUhJ,IAAIkK,KAAK9J,KAAK2J,UAAUH,IAE1C,EA6BJ,OA3BArK,EAAOyL,YAAeR,IAClBjL,EAAO6E,MAAQoG,EACfO,GAAQ,EAEZxL,EAAO0L,gBAAmBT,IACtBjL,EAAOsL,UAAYL,EACnBO,GAAQ,EAEZxL,EAAO+J,KAAQrE,IACE,UAATA,EACA1F,EAAO4E,OAAQ,EAED,UAATc,IACL1F,EAAOuL,cAAgBvL,EAAO6E,MAC9B7E,EAAO6E,MAAQ,QAEnB2G,GAAQ,EAEZxL,EAAO2L,OAAUjG,IACA,UAATA,EACA1F,EAAO4E,OAAQ,EAED,UAATc,IACL1F,EAAO6E,MAAQ7E,EAAOuL,eAE1BC,GAAQ,EAELxL,CACX,CApDA1C,EAAQmG,YAAcA,EAqDtBnG,EAAQ2C,WAAaA,C,2JCtad2L,MAAM,a,GACJA,MAAM,mB,GACJA,MAAM,gB,GACJA,MAAM,a,uCASVA,MAAM,kB,UACTC,EAAAA,EAAAA,GAA2B,UAAvB,sBAAkB,K,UAGlBA,EAAAA,EAAAA,GAAwC,SAAjCC,IAAI,YAAW,cAAU,K,UAIhCD,EAAAA,EAAAA,GAAuC,SAAhCC,IAAI,YAAW,aAAS,K,UAI/BD,EAAAA,EAAAA,GAAsB,aAAf,WAAO,K,UAEZA,EAAAA,EAAAA,GAA+B,UAAvBtO,MAAM,SAAM,MAAE,K,UACtBsO,EAAAA,EAAAA,GAA+B,UAAvBtO,MAAM,QAAK,OAAG,K,GADtBwO,EACAC,G,UAIFH,EAAAA,EAAAA,GAA0B,aAAnB,eAAW,K,UAEhBA,EAAAA,EAAAA,GAA+B,UAAvBtO,MAAM,SAAM,MAAE,K,UACtBsO,EAAAA,EAAAA,GAA+B,UAAvBtO,MAAM,QAAK,OAAG,K,GADtB0O,EACAC,G,UAIFL,EAAAA,EAAAA,GAA0B,aAAnB,eAAW,K,oTAEhBM,G,UASFN,EAAAA,EAAAA,GAA8B,aAAvB,mBAAe,K,UAEpBA,EAAAA,EAAAA,GAAgC,UAAxBtO,MAAM,SAAM,OAAG,K,UACvBsO,EAAAA,EAAAA,GAA8B,UAAtBtO,MAAM,QAAK,MAAE,K,GADrB6O,EACAC,G,UAIFR,EAAAA,EAAAA,GAA6B,aAAtB,kBAAc,K,UAEnBA,EAAAA,EAAAA,GAA+B,UAAvBtO,MAAM,QAAK,OAAG,K,UACtBsO,EAAAA,EAAAA,GAA+B,UAAvBtO,MAAM,SAAM,MAAE,K,GADtB+O,EACAC,G,UAGJV,EAAAA,EAAAA,GAA2C,UAAnCW,KAAK,UAAS,gBAAY,K,0CA9DxCC,EAAAA,EAAAA,IAiEM,MAjENC,EAiEM,EAhEJb,EAAAA,EAAAA,GAUM,MAVNc,EAUM,EATJd,EAAAA,EAAAA,GAQM,MARNe,EAQM,EAPJf,EAAAA,EAAAA,GAKM,MALNgB,EAKM,EAJJhB,EAAAA,EAAAA,GACY,OADNiB,IAAkB,SAAbC,EAAAC,cAAyB7P,EAAQ,KAA+BA,EAAQ,KAC9E8P,IAAI,I,WACTpB,EAAAA,EAAAA,GACY,OADNiB,IAAkB,SAAbC,EAAAG,cAAyB/P,EAAQ,MAAiCA,EAAQ,KAChF8P,IAAI,I,aAEXpB,EAAAA,EAAAA,GAA6E,SAArEsB,UAAWJ,EAAAK,gBAAiBC,SAAA,GAASC,SAAA,GAAS1B,MAAM,S,eAGhEC,EAAAA,EAAAA,GAoDM,MApDN0B,EAoDM,CAnDJC,GACA3B,EAAAA,EAAAA,GAiDO,QAjDA4B,SAAMC,EAAA,MAAAA,EAAA,KAAAC,EAAAA,EAAAA,KAAA,IAAAC,IAAUC,EAAAC,aAAAD,EAAAC,eAAAF,IAAW,e,EAChC/B,EAAAA,EAAAA,GAGM,YAFJkC,GAAwC,SACxClC,EAAAA,EAAAA,GAA6E,SAAtEW,KAAK,OAAOjC,GAAG,W,qCAAoBwC,EAAAiB,SAAQC,GAAGC,UAAW,GAAIC,SAAA,I,iBAA1BpB,EAAAiB,eAE5CnC,EAAAA,EAAAA,GAGM,YAFJuC,GAAuC,SACvCvC,EAAAA,EAAAA,GAA6E,SAAtEW,KAAK,OAAOjC,GAAG,W,qCAAoBwC,EAAAsB,SAAQJ,GAAGC,UAAW,GAAIC,SAAA,I,iBAA1BpB,EAAAsB,eAE5CxC,EAAAA,EAAAA,GAMM,YALJyC,GAAsB,SACtBzC,EAAAA,EAAAA,GAGS,UAHDtB,GAAG,S,qCAAkBwC,EAAAG,cAAae,GAAGM,SAAMb,EAAA,KAAAA,EAAA,OAAAE,IAAEC,EAAAW,gBAAAX,EAAAW,kBAAAZ,K,cAAxBb,EAAAG,oBAK/BrB,EAAAA,EAAAA,GAMM,YALJ4C,GAA0B,SAC1B5C,EAAAA,EAAAA,GAGS,UAHDtB,GAAG,a,qCAAsBwC,EAAAC,cAAaiB,GAAGM,SAAMb,EAAA,KAAAA,EAAA,OAAAE,IAAEC,EAAAa,aAAAb,EAAAa,eAAAd,K,cAAxBb,EAAAC,oBAKnCnB,EAAAA,EAAAA,GAUM,YATJ8C,GAA0B,SAC1B9C,EAAAA,EAAAA,GAOS,UAPDtB,GAAG,a,qCAAsBwC,EAAAlJ,WAAUoK,GAAGM,SAAMb,EAAA,KAAAA,EAAA,OAAAE,IAAEC,EAAAe,oBAAAf,EAAAe,sBAAAhB,K,cAArBb,EAAAlJ,iBASnCgI,EAAAA,EAAAA,GAMM,YALJgD,GAA8B,SAC9BhD,EAAAA,EAAAA,GAGS,UAHDtB,GAAG,gB,qCAAyBwC,EAAA+B,qBAAoBb,I,cAApBlB,EAAA+B,2BAKtCjD,EAAAA,EAAAA,GAMM,YALJkD,GAA6B,SAC7BlD,EAAAA,EAAAA,GAGS,UAHDtB,GAAG,gB,qCAAyBwC,EAAAiC,kBAAiBf,GAAGM,SAAMb,EAAA,MAAAA,EAAA,QAAAE,IAAEC,EAAAoB,wBAAApB,EAAAoB,0BAAArB,K,cAA5Bb,EAAAiC,uBAKtCE,GAA2C,O,uBAQnD,GACEC,KAAM,WACNpO,OACE,MAAO,CACLiN,SAAU,GACVK,SAAU,GACVxK,WAAW,OACXqJ,cAAe,QACfF,cAAe,QACf8B,qBAAsB,OACtBE,kBAAmB,OACnB5B,gBAAiB,KAErB,EACAgC,QAAS,CACPR,qBACE3Q,KAAKgI,MACP,EACAgJ,yBAEE,GADA/N,QAAQmO,IAAI,mBAAqBpR,KAAK+Q,mBACT,SAAzB/Q,KAAK+Q,kBACP/Q,KAAKgI,YAEL,GAA0B,OAAvBhI,KAAKmP,gBAAuB,CAC7B,IAAIzH,EAAS1H,KAAKmP,gBAAgBrH,YAElCJ,EAAOjE,SAAQxB,IACbA,EAAM4H,MAAM,IAEd7J,KAAKmP,gBAAkB,IACzB,CAEJ,EACAoB,iBAEE,GADAtN,QAAQmO,IAAI,mBAAqBpR,KAAKiP,eACZ,MAAtBjP,KAAKmP,gBAAsB,CAC7B,IAAIkC,EAAcrR,KAAKmP,gBAAgBxH,iBACZ,IAAvB0J,EAAYzJ,SACW,SAArB5H,KAAKiP,eACPhM,QAAQmO,IAAI,KACZC,EAAY,GAAGnF,SAAU,IAEzBjJ,QAAQmO,IAAI,KACZnO,QAAQmO,IAAIpR,KAAKiP,eACjBoC,EAAY,GAAGnF,SAAU,GAG/B,CAEF,EACAuE,cAEE,GADAxN,QAAQmO,IAAI,mBAAqBpR,KAAKiP,eACZ,MAAtBjP,KAAKmP,gBAAsB,CAC7B,IAAImC,EAActR,KAAKmP,gBAAgBtH,iBACZ,IAAvByJ,EAAY1J,SACV5H,KAAKiP,cAEPqC,EAAY,GAAGpF,SAAU,EAEzBoF,EAAY,GAAGpF,SAAU,EAG/B,CACF,EACAvL,mBACQ6E,EAAAA,GAAAA,aAAyB,CAC7BI,WAAY5F,KAAK4F,WACjBe,OAAO,EACP3F,MAAO,QAEJuQ,MAAM1P,IACLoB,QAAQmO,IAAIvP,GACZ7B,KAAKmP,gBAAkBtN,CAAM,IAE9B2P,OAAOxO,IACNC,QAAQC,MAAMF,EAAI,GAE1B,EACA6M,cAEO7P,KAAK+P,SAAS0B,QAAWzR,KAAKoQ,SAASqB,OAIxCzR,KAAK+P,SAAS0B,OAAO7J,OAAS,IAAM5H,KAAKoQ,SAASqB,OAAO7J,OAAS,GACpE8J,MAAM,oDAIRC,eAAeC,QAAQ,WAAY5R,KAAKoQ,SAASqB,QACjDE,eAAeC,QAAQ,YAAa5R,KAAK+O,eACzC4C,eAAeC,QAAQ,YAAa5R,KAAKiP,eACzC0C,eAAeC,QAAQ,mBAAoB5R,KAAK6Q,sBAChDc,eAAeC,QAAQ,gBAAiB5R,KAAK+Q,mBAC7CY,eAAeC,QAAQ,aAAc5R,KAAK4F,YAG1C5F,KAAK6R,QAAQlN,KAAK,YAAc3E,KAAK+P,SAAS0B,SAhB5CC,MAAM,sCAiBV,GAEFI,UACE9R,KAAKgI,MACP,EACA+J,QAEA,G,QCzKF,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://webrtc-vue/./node_modules/ion-sdk-js/lib/client.js","webpack://webrtc-vue/./node_modules/ion-sdk-js/lib/index.js","webpack://webrtc-vue/./node_modules/ion-sdk-js/lib/stream.js","webpack://webrtc-vue/./src/components/index.vue","webpack://webrtc-vue/./src/components/index.vue?86bb"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transport = void 0;\nconst stream_1 = require(\"./stream\");\nconst API_CHANNEL = 'ion-sfu';\nconst ERR_NO_SESSION = 'no active session, join first';\nvar Role;\n(function (Role) {\n    Role[Role[\"pub\"] = 0] = \"pub\";\n    Role[Role[\"sub\"] = 1] = \"sub\";\n})(Role || (Role = {}));\nclass Transport {\n    constructor(role, signal, config) {\n        this.signal = signal;\n        this.pc = new RTCPeerConnection(config);\n        this.candidates = [];\n        if (role === Role.pub) {\n            this.pc.createDataChannel(API_CHANNEL);\n        }\n        this.pc.onicecandidate = ({ candidate }) => {\n            if (candidate) {\n                this.signal.trickle({ target: role, candidate });\n            }\n        };\n        this.pc.oniceconnectionstatechange = async (e) => {\n            if (this.pc.iceConnectionState === 'disconnected') {\n                if (this.pc.restartIce !== undefined) {\n                    // this will trigger onNegotiationNeeded\n                    this.pc.restartIce();\n                }\n            }\n        };\n    }\n}\nexports.Transport = Transport;\nclass Client {\n    constructor(signal, config = {\n        codec: 'vp8',\n        iceServers: [\n            {\n                urls: ['stun:stun.l.google.com:19302', 'stun:stun1.l.google.com:19302'],\n            },\n        ],\n    }) {\n        this.signal = signal;\n        this.config = config;\n        signal.onnegotiate = this.negotiate.bind(this);\n        signal.ontrickle = this.trickle.bind(this);\n    }\n    async join(sid, uid) {\n        this.transports = {\n            [Role.pub]: new Transport(Role.pub, this.signal, this.config),\n            [Role.sub]: new Transport(Role.sub, this.signal, this.config),\n        };\n        this.transports[Role.sub].pc.ontrack = (ev) => {\n            const stream = ev.streams[0];\n            const remote = stream_1.makeRemote(stream, this.transports[Role.sub]);\n            if (this.ontrack) {\n                this.ontrack(ev.track, remote);\n            }\n        };\n        const apiReady = new Promise((resolve) => {\n            this.transports[Role.sub].pc.ondatachannel = (ev) => {\n                if (ev.channel.label === API_CHANNEL) {\n                    this.transports[Role.sub].api = ev.channel;\n                    this.transports[Role.pub].api = ev.channel;\n                    ev.channel.onmessage = (e) => {\n                        try {\n                            const msg = JSON.parse(e.data);\n                            this.processChannelMessage(msg);\n                        }\n                        catch (err) {\n                            /* tslint:disable-next-line:no-console */\n                            console.error(err);\n                        }\n                    };\n                    resolve();\n                    return;\n                }\n                if (this.ondatachannel) {\n                    this.ondatachannel(ev);\n                }\n            };\n        });\n        const offer = await this.transports[Role.pub].pc.createOffer();\n        await this.transports[Role.pub].pc.setLocalDescription(offer);\n        const answer = await this.signal.join(sid, uid, offer);\n        await this.transports[Role.pub].pc.setRemoteDescription(answer);\n        this.transports[Role.pub].candidates.forEach((c) => this.transports[Role.pub].pc.addIceCandidate(c));\n        this.transports[Role.pub].pc.onnegotiationneeded = this.onNegotiationNeeded.bind(this);\n        return apiReady;\n    }\n    leave() {\n        if (this.transports) {\n            Object.values(this.transports).forEach((t) => t.pc.close());\n            delete this.transports;\n        }\n    }\n    getPubStats(selector) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        return this.transports[Role.pub].pc.getStats(selector);\n    }\n    getSubStats(selector) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        return this.transports[Role.sub].pc.getStats(selector);\n    }\n    publish(stream, encodingParams) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        stream.publish(this.transports[Role.pub], encodingParams);\n    }\n    restartIce() {\n        this.renegotiate(true);\n    }\n    createDataChannel(label) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        return this.transports[Role.pub].pc.createDataChannel(label);\n    }\n    close() {\n        if (this.transports) {\n            Object.values(this.transports).forEach((t) => t.pc.close());\n        }\n        this.signal.close();\n    }\n    trickle({ candidate, target }) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        if (this.transports[target].pc.remoteDescription) {\n            this.transports[target].pc.addIceCandidate(candidate);\n        }\n        else {\n            this.transports[target].candidates.push(candidate);\n        }\n    }\n    async negotiate(description) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        let answer;\n        try {\n            await this.transports[Role.sub].pc.setRemoteDescription(description);\n            this.transports[Role.sub].candidates.forEach((c) => this.transports[Role.sub].pc.addIceCandidate(c));\n            this.transports[Role.sub].candidates = [];\n            answer = await this.transports[Role.sub].pc.createAnswer();\n            await this.transports[Role.sub].pc.setLocalDescription(answer);\n            this.signal.answer(answer);\n        }\n        catch (err) {\n            /* tslint:disable-next-line:no-console */\n            console.error(err);\n            if (this.onerrnegotiate)\n                this.onerrnegotiate(Role.sub, err, description, answer);\n        }\n    }\n    onNegotiationNeeded() {\n        this.renegotiate(false);\n    }\n    async renegotiate(iceRestart) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        let offer;\n        let answer;\n        try {\n            offer = await this.transports[Role.pub].pc.createOffer({ iceRestart });\n            await this.transports[Role.pub].pc.setLocalDescription(offer);\n            answer = await this.signal.offer(offer);\n            await this.transports[Role.pub].pc.setRemoteDescription(answer);\n        }\n        catch (err) {\n            /* tslint:disable-next-line:no-console */\n            console.error(err);\n            if (this.onerrnegotiate)\n                this.onerrnegotiate(Role.pub, err, offer, answer);\n        }\n    }\n    processChannelMessage(msg) {\n        if (msg.method !== undefined && msg.params !== undefined) {\n            switch (msg.method) {\n                case 'audioLevels':\n                    if (this.onspeaker) {\n                        this.onspeaker(msg.params);\n                    }\n                    break;\n                case 'activeLayer':\n                    if (this.onactivelayer) {\n                        this.onactivelayer(msg.params);\n                    }\n                    break;\n                default:\n                // do nothing\n            }\n        }\n        else {\n            // legacy channel message - payload contains audio levels\n            if (this.onspeaker) {\n                this.onspeaker(msg);\n            }\n        }\n    }\n}\nexports.default = Client;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalStream = exports.Client = void 0;\nconst client_1 = require(\"./client\");\nexports.Client = client_1.default;\nconst stream_1 = require(\"./stream\");\nObject.defineProperty(exports, \"LocalStream\", { enumerable: true, get: function () { return stream_1.LocalStream; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeRemote = exports.LocalStream = exports.VideoConstraints = void 0;\nconst resolutions = ['qvga', 'vga', 'shd', 'hd', 'fhd', 'qhd'];\nexports.VideoConstraints = {\n    qvga: {\n        resolution: {\n            width: { ideal: 320 },\n            height: { ideal: 180 },\n            frameRate: {\n                ideal: 15,\n                max: 30,\n            },\n        },\n        encodings: {\n            maxBitrate: 150000,\n            maxFramerate: 15.0,\n        },\n    },\n    vga: {\n        resolution: {\n            width: { ideal: 640 },\n            height: { ideal: 360 },\n            frameRate: {\n                ideal: 30,\n                max: 60,\n            },\n        },\n        encodings: {\n            maxBitrate: 500000,\n            maxFramerate: 30.0,\n        },\n    },\n    shd: {\n        resolution: {\n            width: { ideal: 960 },\n            height: { ideal: 540 },\n            frameRate: {\n                ideal: 30,\n                max: 60,\n            },\n        },\n        encodings: {\n            maxBitrate: 1200000,\n            maxFramerate: 30.0,\n        },\n    },\n    hd: {\n        resolution: {\n            width: { ideal: 1280 },\n            height: { ideal: 720 },\n            frameRate: {\n                ideal: 30,\n                max: 60,\n            },\n        },\n        encodings: {\n            maxBitrate: 2500000,\n            maxFramerate: 30.0,\n        },\n    },\n    fhd: {\n        resolution: {\n            width: { ideal: 1920 },\n            height: { ideal: 1080 },\n            frameRate: {\n                ideal: 30,\n                max: 60,\n            },\n        },\n        encodings: {\n            maxBitrate: 4000000,\n            maxFramerate: 30.0,\n        },\n    },\n    qhd: {\n        resolution: {\n            width: { ideal: 2560 },\n            height: { ideal: 1440 },\n            frameRate: {\n                ideal: 30,\n                max: 60,\n            },\n        },\n        encodings: {\n            maxBitrate: 8000000,\n            maxFramerate: 30.0,\n        },\n    },\n};\nconst defaults = {\n    resolution: 'hd',\n    codec: 'vp8',\n    audio: true,\n    video: true,\n    simulcast: false,\n};\nclass LocalStream extends MediaStream {\n    constructor(stream, constraints) {\n        super(stream);\n        this.constraints = constraints;\n    }\n    static async getUserMedia(constraints = defaults) {\n        const stream = await navigator.mediaDevices.getUserMedia({\n            audio: LocalStream.computeAudioConstraints({\n                ...defaults,\n                ...constraints,\n            }),\n            video: LocalStream.computeVideoConstraints({\n                ...defaults,\n                ...constraints,\n            }),\n        });\n        return new LocalStream(stream, {\n            ...defaults,\n            ...constraints,\n        });\n    }\n    static async getDisplayMedia(constraints = {\n        codec: 'vp8',\n        resolution: 'hd',\n        audio: false,\n        video: true,\n        simulcast: false,\n    }) {\n        // @ts-ignore\n        const stream = await navigator.mediaDevices.getDisplayMedia(constraints);\n        return new LocalStream(stream, {\n            ...defaults,\n            ...constraints,\n        });\n    }\n    static computeAudioConstraints(constraints) {\n        return constraints.audio;\n    }\n    static computeVideoConstraints(constraints) {\n        if (constraints.video instanceof Object) {\n            return constraints.video;\n        }\n        else if (constraints.video && constraints.resolution) {\n            return {\n                ...exports.VideoConstraints[constraints.resolution].resolution,\n            };\n        }\n        return constraints.video;\n    }\n    getTrack(kind) {\n        let tracks;\n        if (kind === 'video') {\n            tracks = this.getVideoTracks();\n            return tracks.length > 0 ? this.getVideoTracks()[0] : undefined;\n        }\n        tracks = this.getAudioTracks();\n        return tracks.length > 0 ? this.getAudioTracks()[0] : undefined;\n    }\n    async getNewTrack(kind) {\n        const stream = await navigator.mediaDevices.getUserMedia({\n            [kind]: kind === 'video'\n                ? LocalStream.computeVideoConstraints(this.constraints)\n                : LocalStream.computeAudioConstraints(this.constraints),\n        });\n        return stream.getTracks()[0];\n    }\n    publishTrack(track) {\n        if (this.pc) {\n            const init = {\n                streams: [this],\n                direction: 'sendonly',\n            };\n            if (track.kind === 'video') {\n                if (this.encodingParams) {\n                    init.sendEncodings = this.encodingParams;\n                }\n                else if (this.constraints.simulcast) {\n                    const idx = resolutions.indexOf(this.constraints.resolution);\n                    const encodings = [\n                        {\n                            rid: 'f',\n                            maxBitrate: exports.VideoConstraints[resolutions[idx]].encodings.maxBitrate,\n                            maxFramerate: exports.VideoConstraints[resolutions[idx]].encodings.maxFramerate,\n                        },\n                    ];\n                    if (idx - 1 >= 0) {\n                        encodings.push({\n                            rid: 'h',\n                            scaleResolutionDownBy: 2.0,\n                            maxBitrate: exports.VideoConstraints[resolutions[idx - 1]].encodings.maxBitrate,\n                            maxFramerate: exports.VideoConstraints[resolutions[idx - 1]].encodings.maxFramerate,\n                        });\n                    }\n                    if (idx - 2 >= 0) {\n                        encodings.push({\n                            rid: 'q',\n                            scaleResolutionDownBy: 4.0,\n                            maxBitrate: exports.VideoConstraints[resolutions[idx - 2]].encodings.maxBitrate,\n                            maxFramerate: exports.VideoConstraints[resolutions[idx - 2]].encodings.maxFramerate,\n                        });\n                    }\n                    init.sendEncodings = encodings;\n                }\n                else {\n                    init.sendEncodings = [exports.VideoConstraints[this.constraints.resolution].encodings];\n                }\n            }\n            const transceiver = this.pc.addTransceiver(track, init);\n            this.setPreferredCodec(transceiver, track.kind);\n        }\n    }\n    setPreferredCodec(transceiver, kind) {\n        if ('setCodecPreferences' in transceiver) {\n            const cap = RTCRtpSender.getCapabilities(kind);\n            if (!cap)\n                return;\n            let selCodec;\n            if (this.constraints.preferredCodecProfile && kind === 'video') {\n                const allCodecProfiles = cap.codecs.filter((c) => c.mimeType.toLowerCase() === `video/${this.constraints.codec.toLowerCase()}`);\n                if (!allCodecProfiles) {\n                    return;\n                }\n                selCodec = allCodecProfiles.find((c) => { var _a; return c.sdpFmtpLine && ((_a = c.sdpFmtpLine) === null || _a === void 0 ? void 0 : _a.indexOf(`profile-level-id=${this.constraints.preferredCodecProfile}`)) >= 0; });\n                if (!selCodec) {\n                    // get first one\n                    selCodec = allCodecProfiles[0];\n                }\n            }\n            else {\n                selCodec = cap.codecs.find((c) => c.mimeType.toLowerCase() === `video/${this.constraints.codec.toLowerCase()}` ||\n                    c.mimeType.toLowerCase() === `audio/opus`);\n            }\n            if (selCodec) {\n                transceiver.setCodecPreferences([selCodec]);\n            }\n        }\n    }\n    updateTrack(next, prev) {\n        this.addTrack(next);\n        // If published, replace published track with track from new device\n        if (prev) {\n            this.removeTrack(prev);\n            prev.stop();\n            if (this.pc) {\n                this.pc.getSenders().forEach(async (sender) => {\n                    var _a, _b;\n                    if (((_a = sender === null || sender === void 0 ? void 0 : sender.track) === null || _a === void 0 ? void 0 : _a.kind) === next.kind) {\n                        (_b = sender.track) === null || _b === void 0 ? void 0 : _b.stop();\n                        sender.replaceTrack(next);\n                    }\n                });\n            }\n        }\n        else {\n            if (this.pc) {\n                this.publishTrack(next);\n            }\n        }\n    }\n    initAudioEmptyTrack() {\n        // @ts-ignore\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        const ctx = new AudioContext();\n        const oscillator = ctx.createOscillator();\n        oscillator.frequency.setValueAtTime(20000, ctx.currentTime);\n        const dst = oscillator.connect(ctx.createMediaStreamDestination());\n        oscillator.start();\n        return dst.stream.getAudioTracks()[0];\n    }\n    initVideoEmptyTrack(width, height) {\n        var _a;\n        const canvas = Object.assign(document.createElement('canvas'), { width, height });\n        (_a = canvas.getContext('2d')) === null || _a === void 0 ? void 0 : _a.fillRect(0, 0, width, height);\n        const stream = canvas.captureStream();\n        return stream.getVideoTracks()[0];\n    }\n    publish(transport, encodingParams) {\n        this.pc = transport.pc;\n        this.api = transport.api;\n        this.encodingParams = encodingParams;\n        this.getTracks().forEach(this.publishTrack.bind(this));\n    }\n    unpublish() {\n        if (this.pc) {\n            const tracks = this.getTracks();\n            this.pc.getSenders().forEach((s) => {\n                if (s.track && tracks.includes(s.track)) {\n                    this.pc.removeTrack(s);\n                }\n            });\n        }\n    }\n    async switchDevice(kind, deviceId) {\n        this.constraints = {\n            ...this.constraints,\n            [kind]: this.constraints[kind] instanceof Object\n                ? {\n                    ...this.constraints[kind],\n                    deviceId,\n                }\n                : { deviceId },\n        };\n        const prev = this.getTrack(kind);\n        // Firefox/Safari have issues when multiple input devices are used by same origin. We need to stop previous track before creating new one.\n        if (prev)\n            prev.stop();\n        const next = await this.getNewTrack(kind);\n        this.updateTrack(next, prev);\n    }\n    mute(kind) {\n        const track = this.getTrack(kind);\n        if (track && this.constraints.sendEmptyOnMute) {\n            const emptyTrack = kind === 'audio'\n                ? this.initAudioEmptyTrack()\n                : this.initVideoEmptyTrack((track === null || track === void 0 ? void 0 : track.getSettings().width) || 640, (track === null || track === void 0 ? void 0 : track.getSettings().height) || 360);\n            emptyTrack.enabled = false;\n            this.updateTrack(emptyTrack, track);\n            return;\n        }\n        if (track) {\n            track.stop();\n        }\n    }\n    async unmute(kind) {\n        const prev = this.getTrack(kind);\n        const track = await this.getNewTrack(kind);\n        this.updateTrack(track, prev);\n    }\n    async enableLayers(layers) {\n        const call = {\n            streamId: this.id,\n            layers,\n        };\n        const callStr = JSON.stringify(call);\n        if (this.api) {\n            if (this.api.readyState !== 'open') {\n                // queue call if we aren't open yet\n                this.api.onopen = () => { var _a; return (_a = this.api) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(call)); };\n            }\n            else {\n                this.api.send(JSON.stringify(call));\n            }\n        }\n        const layerValues = ['high', 'medium', 'low'];\n        await Promise.all(layerValues.map(async (layer) => {\n            await this.updateMediaEncodingParams({ active: layers.includes(layer) }, layer);\n        }));\n    }\n    async updateMediaEncodingParams(encodingParams, layer) {\n        var _a;\n        if (!this.pc)\n            return;\n        const tracks = this.getTracks();\n        await Promise.all((_a = this.pc) === null || _a === void 0 ? void 0 : _a.getSenders().filter((sender) => sender.track && tracks.includes(sender.track)).map(async (sender) => {\n            const params = sender.getParameters();\n            if (!params.encodings) {\n                params.encodings = [{}];\n            }\n            let idx = 0;\n            if (this.constraints.simulcast && layer) {\n                const rid = layer === 'high' ? 'f' : layer === 'medium' ? 'h' : 'q';\n                idx = params.encodings.findIndex((encoding) => encoding.rid === rid);\n                if (params.encodings.length < idx + 1)\n                    return;\n            }\n            params.encodings[idx] = {\n                ...params.encodings[idx],\n                ...encodingParams,\n            };\n            await sender.setParameters(params);\n        }));\n    }\n}\nexports.LocalStream = LocalStream;\nfunction makeRemote(stream, transport) {\n    const remote = stream;\n    remote.audio = true;\n    remote.video = 'none';\n    remote.framerate = 'high';\n    remote._videoPreMute = 'high';\n    const select = () => {\n        const call = {\n            streamId: remote.id,\n            video: remote.video,\n            audio: remote.audio,\n            framerate: remote.framerate,\n        };\n        if (transport.api) {\n            if (transport.api.readyState !== 'open') {\n                // queue call if we aren't open yet\n                transport.api.onopen = () => { var _a; return (_a = transport.api) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(call)); };\n            }\n            else {\n                transport.api.send(JSON.stringify(call));\n            }\n        }\n    };\n    remote.preferLayer = (layer) => {\n        remote.video = layer;\n        select();\n    };\n    remote.preferFramerate = (layer) => {\n        remote.framerate = layer;\n        select();\n    };\n    remote.mute = (kind) => {\n        if (kind === 'audio') {\n            remote.audio = false;\n        }\n        else if (kind === 'video') {\n            remote._videoPreMute = remote.video;\n            remote.video = 'none';\n        }\n        select();\n    };\n    remote.unmute = (kind) => {\n        if (kind === 'audio') {\n            remote.audio = true;\n        }\n        else if (kind === 'video') {\n            remote.video = remote._videoPreMute;\n        }\n        select();\n    };\n    return remote;\n}\nexports.makeRemote = makeRemote;\n","<template>\r\n  <div class=\"container\">\r\n    <div class=\"video-container\">\r\n      <div class=\"videoWrapper\">\r\n        <div class=\"videoInfo\">\r\n          <img :src=\"initAudioMute==='true' ? require('../static/mic-off-red.svg') : require('../static/mic-green.svg')\"\r\n               alt=\"\">\r\n          <img :src=\"initVideoMute==='true' ? require('../static/video-off-red.svg') : require('../static/video-green.svg')\"\r\n               alt=\"\">\r\n        </div>\r\n        <video :srcObject=\"initLocalStream\" controls autoplay class=\"video\" ></video>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-container\">\r\n      <h2>Enter Meeting Room</h2>\r\n      <form @submit.prevent=\"joinMeeting\">\r\n        <div>\r\n          <label for=\"roomName\">Room Name:</label>\r\n          <input type=\"text\" id=\"roomName\" v-model=\"roomName\" :maxlength=\"30\" required>\r\n        </div>\r\n        <div>\r\n          <label for=\"username\">Username:</label>\r\n          <input type=\"text\" id=\"username\" v-model=\"username\" :maxlength=\"20\" required>\r\n        </div>\r\n        <div>\r\n          <label>Camera:</label>\r\n          <select id=\"camera\" v-model=\"initVideoMute\" @change=\"onCameraChange\">\r\n            <option value=false>On</option>\r\n            <option value=true>Off</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>Microphone:</label>\r\n          <select id=\"microphone\" v-model=\"initAudioMute\" @change=\"onMicChange\">\r\n            <option value=false>On</option>\r\n            <option value=true>Off</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>resolution:</label>\r\n          <select id=\"resolution\" v-model=\"resolution\" @change=\"onResolutionChange\">\r\n            <option value=qvga>qvga</option>\r\n            <option value=vga>vga</option>\r\n            <option value=shd>shd</option>\r\n            <option value=hd>hd</option>\r\n            <option value=fhd>fhd</option>\r\n            <option value=qhd>qhd</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>Mute Newcomers:</label>\r\n          <select id=\"muteNewcomers\" v-model=\"initRemoteStreamMute\">\r\n            <option value=false>Yes</option>\r\n            <option value=true>No</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>PublishStream:</label>\r\n          <select id=\"muteNewcomers\" v-model=\"initPublishStream\" @change=\"onCPublishStreamChange\">\r\n            <option value=true>Yes</option>\r\n            <option value=false>No</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">Join Meeting</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {LocalStream} from \"ion-sdk-js\";\r\n\r\nexport default {\r\n  name: 'indexVue',\r\n  data() {\r\n    return {\r\n      roomName: '',\r\n      username: '',\r\n      resolution:'qvga',\r\n      initVideoMute: 'false',\r\n      initAudioMute: 'false',\r\n      initRemoteStreamMute: 'true',\r\n      initPublishStream: 'true',\r\n      initLocalStream: null,\r\n    };\r\n  },\r\n  methods: {\r\n    onResolutionChange(){\r\n      this.init()\r\n    },\r\n    onCPublishStreamChange(){\r\n      console.log('Camera changed: ' + this.initPublishStream)\r\n      if (this.initPublishStream==='true'){\r\n        this.init()\r\n      } else {\r\n        if(this.initLocalStream!==null){\r\n          let tracks = this.initLocalStream.getTracks();\r\n          // 停止所有的音视频轨道\r\n          tracks.forEach(track => {\r\n            track.stop();\r\n          });\r\n          this.initLocalStream = null\r\n        }\r\n      }\r\n    },\r\n    onCameraChange() {\r\n      console.log('Camera changed: ' + this.initVideoMute);\r\n      if (this.initLocalStream!=null){\r\n        let videoTracks = this.initLocalStream.getVideoTracks();\r\n        if (videoTracks.length !== 0) {\r\n          if (this.initVideoMute==='true') {\r\n            console.log('1')\r\n            videoTracks[0].enabled = false;\r\n          } else {\r\n            console.log('2')\r\n            console.log(this.initVideoMute)\r\n            videoTracks[0].enabled = true;\r\n          }\r\n        }\r\n      }\r\n\r\n    },\r\n    onMicChange() {\r\n      console.log('Camera changed: ' + this.initVideoMute);\r\n      if (this.initLocalStream!=null){\r\n        let audioTracks = this.initLocalStream.getAudioTracks();\r\n        if (audioTracks.length !== 0) {\r\n          if (this.initVideoMute) {\r\n\r\n            audioTracks[0].enabled = false;\r\n          } else {\r\n            audioTracks[0].enabled = true;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    async init() {\r\n      await LocalStream.getUserMedia({\r\n        resolution: this.resolution,\r\n        audio: true,\r\n        codec: \"vp8\",\r\n      })\r\n          .then((stream) => {\r\n            console.log(stream)\r\n            this.initLocalStream = stream;\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          })\r\n    },\r\n    joinMeeting() {\r\n      // Form validation\r\n      if (!this.roomName.trim() || !this.username.trim()) {\r\n        alert('Please fill in all required fields.');\r\n        return;\r\n      }\r\n      if (this.roomName.trim().length > 30 || this.username.trim().length > 20) {\r\n        alert('Please enter a value within the maximum length.');\r\n        return;\r\n      }\r\n      // Save user settings to session storage\r\n      sessionStorage.setItem('username', this.username.trim());\r\n      sessionStorage.setItem('audioMute', this.initAudioMute);\r\n      sessionStorage.setItem('videoMute', this.initVideoMute);\r\n      sessionStorage.setItem('remoteStreamMute', this.initRemoteStreamMute);\r\n      sessionStorage.setItem('publishStream', this.initPublishStream);\r\n      sessionStorage.setItem('resolution', this.resolution);\r\n\r\n      // Redirect to meeting room\r\n      this.$router.push('/meeting/' + this.roomName.trim());\r\n    },\r\n  },\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  watch(){\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.video-container {\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.form-container {\r\n  flex: 1;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\r\n  border-radius: 10px;\r\n  text-align: center;\r\n}\r\n\r\nh2 {\r\n  margin-top: 0;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\nform {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 10px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput[type=\"text\"],\r\nselect {\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  margin-bottom: 20px;\r\n  font-size: 16px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #4285f4;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover {\r\n  background-color: #3367d6;\r\n}\r\n\r\n.videoWrapper {\r\n  margin: 5px;\r\n  border-radius: 20px;\r\n  max-width: 700px;\r\n  flex-grow: 1;\r\n  flex-basis: 200px;\r\n  min-width: 400px;\r\n  position: relative;\r\n  overflow: auto;\r\n}\r\n\r\n.videoInfo {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  z-index: 1200;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  text-shadow: 1px 1px #000;\r\n}\r\n\r\n.video {\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n</style>\r\n","import { render } from \"./index.vue?vue&type=template&id=061323da&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=061323da&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\Study\\\\毕业设计\\\\webrtc\\\\webrtc-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-061323da\"]])\n\nexport default __exports__"],"names":["require","Object","defineProperty","exports","value","Transport","stream_1","API_CHANNEL","ERR_NO_SESSION","Role","constructor","role","signal","config","this","pc","RTCPeerConnection","candidates","pub","createDataChannel","onicecandidate","candidate","trickle","target","oniceconnectionstatechange","async","iceConnectionState","undefined","restartIce","Client","codec","iceServers","urls","onnegotiate","negotiate","bind","ontrickle","sid","uid","transports","sub","ontrack","ev","stream","streams","remote","makeRemote","track","apiReady","Promise","resolve","ondatachannel","channel","label","api","onmessage","e","msg","JSON","parse","data","processChannelMessage","err","console","error","offer","createOffer","setLocalDescription","answer","join","setRemoteDescription","forEach","c","addIceCandidate","onnegotiationneeded","onNegotiationNeeded","leave","values","t","close","getPubStats","selector","Error","getStats","getSubStats","publish","encodingParams","renegotiate","remoteDescription","push","description","createAnswer","onerrnegotiate","iceRestart","method","params","onspeaker","onactivelayer","client_1","default","enumerable","get","LocalStream","VideoConstraints","resolutions","qvga","resolution","width","ideal","height","frameRate","max","encodings","maxBitrate","maxFramerate","vga","shd","hd","fhd","qhd","defaults","audio","video","simulcast","MediaStream","constraints","super","static","navigator","mediaDevices","getUserMedia","computeAudioConstraints","computeVideoConstraints","getDisplayMedia","getTrack","kind","tracks","getVideoTracks","length","getAudioTracks","getTracks","publishTrack","init","direction","sendEncodings","idx","indexOf","rid","scaleResolutionDownBy","transceiver","addTransceiver","setPreferredCodec","cap","RTCRtpSender","getCapabilities","selCodec","preferredCodecProfile","allCodecProfiles","codecs","filter","mimeType","toLowerCase","find","_a","sdpFmtpLine","setCodecPreferences","updateTrack","next","prev","addTrack","removeTrack","stop","getSenders","_b","sender","replaceTrack","initAudioEmptyTrack","AudioContext","window","webkitAudioContext","ctx","oscillator","createOscillator","frequency","setValueAtTime","currentTime","dst","connect","createMediaStreamDestination","start","initVideoEmptyTrack","canvas","assign","document","createElement","getContext","fillRect","captureStream","transport","unpublish","s","includes","deviceId","getNewTrack","mute","sendEmptyOnMute","emptyTrack","getSettings","enabled","layers","call","streamId","id","stringify","readyState","onopen","send","layerValues","all","map","updateMediaEncodingParams","active","layer","getParameters","findIndex","encoding","setParameters","framerate","_videoPreMute","select","preferLayer","preferFramerate","unmute","class","_createElementVNode","for","_hoisted_13","_hoisted_14","_hoisted_17","_hoisted_18","_hoisted_21","_hoisted_29","_hoisted_30","_hoisted_33","_hoisted_34","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","src","$data","initAudioMute","alt","initVideoMute","srcObject","initLocalStream","controls","autoplay","_hoisted_8","_hoisted_9","onSubmit","_cache","_withModifiers","args","$options","joinMeeting","_hoisted_10","roomName","$event","maxlength","required","_hoisted_11","username","_hoisted_12","onChange","onCameraChange","_hoisted_16","onMicChange","_hoisted_20","onResolutionChange","_hoisted_28","initRemoteStreamMute","_hoisted_32","initPublishStream","onCPublishStreamChange","_hoisted_36","name","methods","log","videoTracks","audioTracks","then","catch","trim","alert","sessionStorage","setItem","$router","mounted","watch","__exports__","render"],"sourceRoot":""}